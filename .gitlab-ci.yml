default:
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin

variables:
  TEST_IMAGE: $CI_REGISTRY_IMAGE:test
  IMAGE_VERSION: $CI_REGISTRY_IMAGE:v_$CI_COMMIT_SHA
  IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest

build:
  stage: build
  script:
    - apk update && apk add curl && apk add jq
    - 'export RUNNER_TOKEN=$(curl --request POST --data "{\"role_id\": \"$APPROLE_ROLE_ID\", \"secret_id\":\"$APPROLE_SECRET_ID\"}" "$VAULT_SERVER_URL/v1/auth/approle/login" | jq -r ".auth.client_token")'
    - 'export TEXT_SECRET=$(curl --header "X-Vault-Token: $RUNNER_TOKEN"     $VAULT_SERVER_URL/v1/kv/weatherapp/text | jq ".data.Assignment")'
    - TEXT_SECRET=$(echo $TEXT_SECRET | tr -d '"')
    - cd app
    - docker build --no-cache --build-arg ASSIGNMENT_SECRET=$TEXT_SECRET -t $TEST_IMAGE .
    - docker push $TEST_IMAGE

test:
  stage: test
  script:
    - docker pull $TEST_IMAGE
    - cd app && docker compose up -d
    - apk update && apk add curl
    - curl http://172.31.27.104:9090
  after_script:
    - docker rm -f test



upload_final_image:
  stage: deploy
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $IMAGE_VERSION
    - docker tag $TEST_IMAGE $IMAGE_LATEST
    - docker push $IMAGE_VERSION
    - docker push $IMAGE_LATEST
  after_script:
    - docker rmi -f $IMAGE_VERSION
    - docker rmi -f $TEST_IMAGE
    - docker system prune -f



